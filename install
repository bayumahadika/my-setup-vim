#!/usr/bin/bash

pkg update -y && pkg upgrade -y && pkg install -y vim git nodejs

curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

echo -e "set encoding=UTF-8 nobackup nowritebackup nocompatible background=dark termguicolors autoindent expandtab tabstop=2 shiftwidth=2
syntax on

call plug#begin()
Plug 'lissaferreira/dalton-vim'
Plug 'vim-airline/vim-airline'
Plug 'preservim/nerdtree'
Plug 'ryanoasis/vim-devicons'
Plug 'kassio/neoterm'
Plug 'alvan/vim-closetag'
Plug 'jiangmiao/auto-pairs'
Plug 'sheerun/vim-polyglot'
Plug 'othree/html5.vim'
Plug 'pangloss/vim-javascript'
Plug 'gutenye/json5.vim'
Plug 'elzr/vim-json'
Plug 'HerringtonDarkholme/yats.vim'
Plug 'maxmellon/vim-jsx-pretty'
Plug 'godlygeek/tabular'
Plug 'preservim/vim-markdown'
Plug 'lifepillar/pgsql.vim'
Plug 'StanAngeloff/php.vim'
Plug 'vim-python/python-syntax'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
call plug#end()

colorscheme dalton
let g:airline_theme='dalton'
let NERDTreeShowHidden=1
nnoremap <leader>n :NERDTreeFocus<CR>
nnoremap <C-n> :NERDTree<CR>
nnoremap <C-t> :NERDTreeToggle<CR>
nnoremap <C-f> :NERDTreeFind<CR>
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists('s:std_in') | NERDTree | endif


let g:closetag_filenames = '*.html,*.xhtml,*.phtml,*.js,*.ts,*.jsx,*.tsx'
let g:closetag_xhtml_filenames = '*.xhtml,*.jsx,*.tsx'
let g:closetag_filetypes = 'html,xhtml,phtml'
let g:closetag_xhtml_filetypes = 'xhtml,jsx,tsx'
let g:closetag_emptyTags_caseSensitive = 1
let g:closetag_regions = {
\ 'typescript.tsx': 'jsxRegion,tsxRegion',
\ 'javascript.jsx': 'jsxRegion',
\ 'typescriptreact': 'jsxRegion,tsxRegion',
\ 'javascriptreact': 'jsxRegion',
\ }
let g:closetag_shortcut = '>'
let g:closetag_close_shortcut = '<leader>>'

let g:vim_jsx_pretty_colorful_config = 1
let g:python_highlight_all = 1

inoremap <silent><expr> <CR> coc#pum#visible() ? coc#pum#confirm()
\: '\<C-g>u\<CR>\<c-r>=coc#on_enter()\<CR>'
function! CheckBackspace() abort
let col = col('.') - 1
return !col || getline('.')[col - 1]  =~# '\s'
endfunction

if has('nvim')
inoremap <silent><expr> <c-space> coc#refresh()
else
inoremap <silent><expr> <c-@> coc#refresh()
endif

nmap <silent> [g <Plug>(coc-diagnostic-prev)
nmap <silent> ]g <Plug>(coc-diagnostic-next)

nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gy <Plug>(coc-type-definition)
nmap <silent> gi <Plug>(coc-implementation)
nmap <silent> gr <Plug>(coc-references)

nnoremap <silent> K :call ShowDocumentation()<CR>

function! ShowDocumentation()
if CocAction('hasProvider', 'hover')
call CocActionAsync('doHover')
else
call feedkeys('K', 'in')
endif
endfunction

autocmd CursorHold * silent call CocActionAsync('highlight')
" > $HOME/.vimrc

vi +PlugInstall -c "q" -c "q"
vi . -c "CocInstall coc-json coc-highlight coc-html coc-emmet coc-htmlhint coc-css coc-cssmodules @yaegassy/coc-tailwindcss3 coc-tsserver coc-tslint-plugin coc-prettier coc-html-css-support coc-phpls coc-blade @yaegassy/coc-laravel coc-eslint"

echo -e '{
  "colors.enable": true,
  "emmet.includeLanguages": {
    "vue-html": "html",
    "javascript": "javascriptreact",
    "typescript": "typescriptreact"
  },
  "emmet.excludeLanguages": ["markdown"],
  "html-css-support.enabledLanguages": [
    "html",
    "vue",
    "blade",
    "htmldjango",
    "typescriptreact",
    "javascriptreact"
  ],
  "html-css-support.styleSheets": [
    "https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css",
    "/style.css",
    "style.css",
    "./*.css",
    "./**/*.css"
  ],
  "cssmodules.camelCase": true,
  "cssmodules.hintName": "cssmodules",
  "coc.preferences.formatOnSave": true,
  "coc.preferences.formatOnType": true
}' > $HOME/.vim/coc-settings.json

echo -e "\x1b[1m\t\x1b[44m\x20\x20DONE\x20\x20\x1b[0m"
